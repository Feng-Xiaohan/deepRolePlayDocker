name: Build and Push Docker Image

on:
  push:
    branches: [main]   # 你自己手动 push 的时候
  workflow_dispatch:   # 手动触发
  workflow_run:        # 当 "Sync upstream" 工作流完成时触发
    workflows: ["Merge upstream branches"]
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write        # 允许写入 GHCR

    steps:
      # Step 1: 设置镜像名（必须小写）
      - name: Set lowercase repo name
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}" >> ${GITHUB_ENV}

      # Step 2: 拉取代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 3: 读取版本号（如果仓库里有 version.txt，否则删掉这一步）
      - name: Read version from file
        id: version
        run: |
          if [ -f version.txt ]; then
            echo "VERSION=$(grep version= version.txt | cut -d= -f2)" >> $GITHUB_OUTPUT
          else
            echo "VERSION=latest" >> $GITHUB_OUTPUT
          fi
      # Step 4: 登录 GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: 设置 Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 6: 构建并推送镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: |
            linux/amd64
            linux/arm64
